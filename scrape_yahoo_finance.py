# ----------------------------------------------------------------------------
# scrape_yahoo_finance.py
# 2016-07-25
# this script is an example of how to use pandas to interpret a csv file
# generated by the yahoo finance api
# referenced http://wern-ancheta.com/blog/2015/04/05/getting-started-with-the-
# yahoo-finance-api/
# ----------------------------------------------------------------------------

# imports
# ----------------------------------------------------------------------------
import pandas as pd
# ----------------------------------------------------------------------------

# attributes
# ----------------------------------------------------------------------------
PARAMETERS = {
    'ask': 'a',
    'bid': 'b',
    'ask (realtime)': 'b2',
    'bid (realtime)': 'b3',
    'previous close': 'p',
    'open': 'o',
    'dividend yield': 'y',
    'dividend per share': 'd',
    'dividend pay date': 'r1',
    'ex-dividend date': 'q',
    'change': 'c1',
    'change & percentage change': 'c',
    'change (realtime)': 'c6',
    'change percent': 'k2',
    'change in percent': 'p2',
    'last trade date': 'd1',
    'trade date': 'd2',
    'last trade time': 't1',
    'after hours change': 'c8',
    'commission': 'c3',
    'day\'s low': 'g',
    'day\'s high': 'h',
    'last trade (realtime) with time': 'k1',
    'last trade (with time)': 'l',
    'last trade (price only)': 'l1',
    '1 yr target price': 't8',
    'change from 200 day moving average': 'm5',
    'percent change from 200 day moving average': 'm6',
    'change from 50 day moving average': 'm7',
    'percent change from 50 day moving average': 'm8',
    '50 day moving average': 'm3',
    '200 day moving average': 'm4',
    'day\'s value change': 'w1',
    'day\'s value change (realtime)': 'w4',
    'price paid': 'p1',
    'day\'s range': 'm',
    'day\'s range (realtime)': 'm2',
    'holding gain percent': 'g1',
    'annualized gain': 'g3',
    'holdings gain': 'g4',
    'holdings gain percent (realtime)': 'g5',
    'holdings gain (realtime)': 'g6',
    'ticker trend': 't7',
    'trade links': 't6',
    'order book (realtime)': 'i5',
    'high limit': 'l2',
    'low limit': 'l3',
    'holdings value': 'v1',
    'holdings value (realtime)': 'v7',
    'revenue': 's6',
    '52 week high': 'k',
    '52 week low': 'j',
    'change from 52 week low': 'j5',
    'change from 52 week high': 'k4',
    'percent change from 52 week low': 'j6',
    'percent change from 52 week high': 'k5',
    '52 week range': 'w',
    'more info': 'v',
    'market capitalization': 'j1',
    'market cap (realtime)': 'j3',
    'float shares': 'f6',
    'name': 'n',
    'notes': 'n4',
    'symbol': 's',
    'shares owned': 's1',
    'stock exchange': 'x',
    'shares outstanding': 'j2',
    'volume': 'v',
    'ask size': 'a5',
    'bid size': 'b6',
    'last trade size': 'k3',
    'average daily volume': 'a2',
    'earnings per share': 'e',
    'eps estimate current year': 'e7',
    'eps estimate next year': 'e8',
    'eps estimate next quarter': 'e9',
    'book value': 'b4',
    'EBITDA': 'j4',
    'price / sales': 'p5',
    'price / book': 'p6',
    'P/E ratio': 'r',
    'P/E ratio (realtime)': 'r2',
    'PEG ratio': 'r5',
    'price / eps estimate current year': 'r6',
    'price /eps estimate next year': 'r7',
    'short ratio': 's7'}

# ----------------------------------------------------------------------------

# functions
# ----------------------------------------------------------------------------
# ----------------------------------------------------------------------------


# script
# ----------------------------------------------------------------------------
url = 'http://finance.yahoo.com/d/quotes.csv'
symbols = ['CRUS', 'AAPL']
parameters = [
    'symbol', 'previous close',
    'open', 'day\'s range', 'last trade (price only)',
    '52 week range', '1 yr target price']
request = (                                                                     # build url request
    url +                                                                       # base url
    '?' +                                                                       # query symbol
    's=' + '+'.join(symbols) +                                                  # ticker symbols for the companies of interest
    '&' +                                                                       # and symbol
    'f=' + ''.join(PARAMETERS[p] for p in parameters))                          # characters indicating the parameters of interest

print(request)

data = pd.read_csv(request, names=parameters)

print(data)
# ----------------------------------------------------------------------------
